<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laowang.dao.EmpDao">
    <select id="selectByEmpno" resultType="Emp">
        select * from Emp where empno = #{empno}
    </select>
    <insert id="save" parameterType="Emp">
        insert emp(empno,ename,deptno,hiredate,job,mgr,sal,comm)
        value (#{empno},#{ename},null ,#{hiredate},null ,null ,#{sal},null );
    </insert>
    <delete id="delete" parameterType="int">
        delete from emp where empno = #{empno}
    </delete>
    <update id="update" parameterType="Emp">
        update emp set sal=#{sal} where empno=#{empno}
    </update>
    <!--批量增加，自增主键（前提是数据库支持才行）
    ALTER TABLE `mybatis_test`.`emp`
    CHANGE COLUMN `EMPNO` `EMPNO` INT NOT NULL AUTO_INCREMENT;
    动态SQL之 【foreach元素】-->
    <insert id="saveBatch" parameterType="Emp"
            useGeneratedKeys="true" keyProperty="empno">
        insert into emp(ename,hiredate,sal) values
        <foreach collection="list" item="item" separator=",">
            (#{item.ename},#{item.hiredate},#{item.sal})
        </foreach>
    </insert>
    <!--【selectKey元素】用来给属性keyProperty赋值
    ,若要这个元素生效，数据库那边要取消自增-->
    <insert id="saveWithRandomID" parameterType="Emp">
        <selectKey keyProperty="empno" order="BEFORE" resultType="int" statementType="PREPARED">
            select ceil(rand()*10000) empno from dual
        </selectKey>
        insert into emp(empno,ename,hiredate,sal) values
        <foreach collection="list" item="item" separator=",">
            (#{item.empno},#{item.ename},#{item.hiredate},#{item.sal})
        </foreach>
    </insert>
    <!--当 SQL 语句中的元数据（如表名或列名）是动态生成的时候，字符串替换将会非常有用。 
    举个例子，如果你想 select 一个表任意一列的数据时-->
    <select id="selectByColumn" resultType="Emp">
        select * from ${table} where ${column} = #{value}
    </select>
    <!--字段别名匹配javaBean
        <select id="selectUsers" resultType="User">
          select
            user_id             as "id",
            user_name           as "userName",
            hashed_password     as "hashedPassword"
          from some_table
          where id = #{id}
        </select>
    -->
    <!--显式配置 ResultMap
    resultType取消，变成resultMap引用如下配置-->
    <resultMap id="selectByColumnRM" type="Emp">
        <id property="empno" column="empno"/>
        <result property="ename" column="ename"/>
        <result property="hiredate" javaType="java.sql.Date" column="hiredate"/>
        <result property="sal" javaType="long" column="sal"/>
    </resultMap>
    
    
</mapper>